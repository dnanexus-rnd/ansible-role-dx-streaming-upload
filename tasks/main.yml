---
# Install Dx-toolkit
- name: Get DX tarball
  unarchive: src=https://wiki.dnanexus.com/images/files/dx-toolkit-current-ubuntu-14.04-amd64.tar.gz dest=~ copy=no

# http://stackoverflow.com/questions/22256884/not-possible-to-source-bashrc-with-ansible
- name: check dx version
  shell: source ~/dx-toolkit/environment  && dx --version
  args:
    executable: /bin/bash
  register: dx_version

- name: Print dx version
  debug:
    msg: "Dx-toolkit Version {{ dx_version.stdout }}"

# Install Upload Agent
- name: Create folder to house upload agent
  file: path=~/dnanexus-upload-agent state=directory mode=0755

- name: Download and unzip UA tarball
  unarchive: src=https://wiki.dnanexus.com/images/files/dnanexus-upload-agent-current-linux.tar.gz dest=~/dnanexus-upload-agent copy=no

- name: Move ua executable to un-versioned folder location for ease of reference
  shell: mv ~/dnanexus-upload-agent/*/* ~/dnanexus-upload-agent/

- name: check ua folder content
  shell: ls ~/dnanexus-upload-agent/
  register: ua_folder_content

- name: print ua folder content
  debug:
    msg: "Upload agent folder contains: {{ ua_folder_content.stdout }}"

- name: Check installed UA version
  command: ua --version
  environment:
    PATH: "{{ ansible_env.HOME }}/dnanexus-upload-agent:{{ ansible_env.PATH }}"
  register: ua_version

- name: Print installed UA version
  debug:
    msg: "Upload agent Version {{ ua_version.stdout }}"

# Logging into DNAnexus account
- name: Log in to DNAnexus account if dx_user_token is provided
  command: source ~/dx-toolkit/environment && dx login --token {{ item.dx_user_token if 'dx_user_token' in item else dx_token }} --noprojects
  become: yes
  become_user: "{{ item.username }}"
  args:
    executable: /bin/bash
  with_items: "{{ monitored_users }}"
  when: (dx_token is defined) or (item.dx_user_token is defined)

# Copy the necessary files for RUN directory monitoring
- name: Create the script directory for housing scripts
  file: path=~/dnanexus/scripts state=directory mode=0755

- name: Create the config directory for housing config files
  file: path=~/dnanexus/config state=directory mode=0755

- name: Copy necessary scripts
  copy: src=../files/ dest=~/dnanexus/scripts

- name: Copy necessary config
  copy: src=../templates/monitor_run_config.template dest=~/dnanexus/config/monitor_runs.config

- name: Create lock file for CRON to wait on using flock
  file: path=~/dnanexus/cron.lock state=touch

- name: fail when project is not defined
  fail: msg="Project to upload to was not defined"
  when: upload_project is not defined

- name: fail when local folder to monitor (for RUN dirs) is not defined
  fail: msg="Local dir to monitor (for RUN dirs) is not defined"
  with_items: "{{ monitored_users }}"
  when: item.monitored_directories is not defined

# Set up CRON job for monitoring
- name: set up CRON job to run every minute in debug mode
  cron: >
    name="DNAnexus monitor runs (deploy)"
    user="{{ item.0.username }}"
    job="flock -n ~/dnanexus/cron.lock bash -ex -c 'source ~/dx-toolkit/environment; PATH=$PATH:~/dnanexus-upload-agent; python ~/dnanexus/scripts/monitor_runs.py -c ~/dnanexus/config/monitor_runs.config -p {{ upload_project }} -d {{ item.1 }} -v > ~/monitor.log 2>&1' > ~/dx-stream_cron.log 2>&1"
  with_subelements:
        - monitored_users
        - monitored_directories
  become: yes
  become_user: "{{ item.0.username }}"
  when: mode == "debug"

- name: set up CRON job to run every hour in deploy mode
  cron: >
    name="DNAnexus monitor runs (deploy)"
    special_time=hourly
    user="{{ item.0.username }}"
    job="flock -n ~/dnanexus/cron.lock bash -ex -c 'source ~/dx-toolkit/environment; PATH=$PATH:~/dnanexus-upload-agent; python ~/dnanexus/scripts/monitor_runs.py -c ~/dnanexus/config/monitor_runs.config -p {{ upload_project }} -d {{ item.1 }} -v > ~/monitor.log 2>&1' > ~/dx-stream_cron.log 2>&1"
  with_subelements:
        - monitored_users
        - monitored_directories
  become: yes
  become_user: "{{ item.0.username }}"
  when: mode == "deploy"